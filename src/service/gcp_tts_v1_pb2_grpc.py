# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from service import gcp_tts_v1_pb2 as service_dot_gcp__tts__v1__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in service/gcp_tts_v1_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TextToSpeechStub(object):
    """Service that implements Google Cloud Text-to-Speech API.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListVoices = channel.unary_unary(
                '/google.cloud.texttospeech.v1.TextToSpeech/ListVoices',
                request_serializer=service_dot_gcp__tts__v1__pb2.ListVoicesRequest.SerializeToString,
                response_deserializer=service_dot_gcp__tts__v1__pb2.ListVoicesResponse.FromString,
                _registered_method=True)
        self.SynthesizeSpeech = channel.unary_unary(
                '/google.cloud.texttospeech.v1.TextToSpeech/SynthesizeSpeech',
                request_serializer=service_dot_gcp__tts__v1__pb2.SynthesizeSpeechRequest.SerializeToString,
                response_deserializer=service_dot_gcp__tts__v1__pb2.SynthesizeSpeechResponse.FromString,
                _registered_method=True)
        self.StreamingSynthesize = channel.stream_stream(
                '/google.cloud.texttospeech.v1.TextToSpeech/StreamingSynthesize',
                request_serializer=service_dot_gcp__tts__v1__pb2.StreamingSynthesizeRequest.SerializeToString,
                response_deserializer=service_dot_gcp__tts__v1__pb2.StreamingSynthesizeResponse.FromString,
                _registered_method=True)


class TextToSpeechServicer(object):
    """Service that implements Google Cloud Text-to-Speech API.
    """

    def ListVoices(self, request, context):
        """Returns a list of Voice supported for synthesis.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SynthesizeSpeech(self, request, context):
        """Synthesizes speech synchronously: receive results after all text input
        has been processed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamingSynthesize(self, request_iterator, context):
        """Performs bidirectional streaming speech synthesis: receives audio while
        sending text.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TextToSpeechServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListVoices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVoices,
                    request_deserializer=service_dot_gcp__tts__v1__pb2.ListVoicesRequest.FromString,
                    response_serializer=service_dot_gcp__tts__v1__pb2.ListVoicesResponse.SerializeToString,
            ),
            'SynthesizeSpeech': grpc.unary_unary_rpc_method_handler(
                    servicer.SynthesizeSpeech,
                    request_deserializer=service_dot_gcp__tts__v1__pb2.SynthesizeSpeechRequest.FromString,
                    response_serializer=service_dot_gcp__tts__v1__pb2.SynthesizeSpeechResponse.SerializeToString,
            ),
            'StreamingSynthesize': grpc.stream_stream_rpc_method_handler(
                    servicer.StreamingSynthesize,
                    request_deserializer=service_dot_gcp__tts__v1__pb2.StreamingSynthesizeRequest.FromString,
                    response_serializer=service_dot_gcp__tts__v1__pb2.StreamingSynthesizeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'google.cloud.texttospeech.v1.TextToSpeech', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('google.cloud.texttospeech.v1.TextToSpeech', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TextToSpeech(object):
    """Service that implements Google Cloud Text-to-Speech API.
    """

    @staticmethod
    def ListVoices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.texttospeech.v1.TextToSpeech/ListVoices',
            service_dot_gcp__tts__v1__pb2.ListVoicesRequest.SerializeToString,
            service_dot_gcp__tts__v1__pb2.ListVoicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SynthesizeSpeech(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.texttospeech.v1.TextToSpeech/SynthesizeSpeech',
            service_dot_gcp__tts__v1__pb2.SynthesizeSpeechRequest.SerializeToString,
            service_dot_gcp__tts__v1__pb2.SynthesizeSpeechResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamingSynthesize(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/google.cloud.texttospeech.v1.TextToSpeech/StreamingSynthesize',
            service_dot_gcp__tts__v1__pb2.StreamingSynthesizeRequest.SerializeToString,
            service_dot_gcp__tts__v1__pb2.StreamingSynthesizeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
